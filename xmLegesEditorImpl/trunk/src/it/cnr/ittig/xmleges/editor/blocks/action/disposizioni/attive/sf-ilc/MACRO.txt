/* RIF */
let RIF = "RIF"

/* VIR */
let VIR = "VIR"




/* crea una variabile NORMABR per i lemmi che possono occorrere come valori di <norma> nelle abrogazioni */

let NORMABR = "RIF"|"comma"|"articolo"|"capo"|"legge"|"decreto"|
	   	"decreto-legge"|"sezione"|"disposizione"| "lettera"|
		"regolamento"|"norma"|"L"|"L."|"L.R."|"numero"|"periodo"|"provvedimento"
/* */	   

let NORMARIF = "RIF"

/* crea una variabile NORMABRPP per i lemmi che non possono occorrere come valori di <norma> nelle abrogazioni */

let NORMABRPP = "RIF"|"comma"|"articolo"|"capo"|"legge"|"decreto"|
	   "decreto-legge"|"sezione"|"disposizione"|"regolamento"|"provvedimento"|"periodo"
	   







/* crea una variabile LETTERASING per il pattern "lettera_Giulia" */

let LETTERASING = Q_C
		with {
		   Q.potgov = "a"|"A"|"b"|"B"|"c"|"C"|"d"|"D"|"f"|"F"|"g"|"G"|"h"|"H"|"i"|"I"|"l"|"L"|
		   "m"|"M"|"n"|"N"|"p"|"P"|"q"|"Q"|"r"|"R"|"s"|"S"|"t"|"T"|"u"|"U"|"v"|"V"|"z"|"Z"
		   }
/* lettere singole */
let LETS = "a"|"A"|"b"|"B"|"c"|"C"|"d"|"D"|"f"|"F"|"g"|"G"|"h"|"H"|"i"|"I"|"l"|"L"|
		   "m"|"M"|"n"|"N"|"p"|"P"|"q"|"Q"|"r"|"R"|"s"|"S"|"t"|"T"|"u"|"U"|"v"|"V"|"z"|"Z"

/* lettere bis */
let LETB =  "a-bis"|"A-bis"|"b-bis"|"B-bis"|"c-bis"|"C-bis"|"d-bis"|"D-bis"|"f-bis"|
    	    "F-bis"|"g-bis"|"G-bis"|"h-bis"|"H-bis"|"i-bis"|"I-bis"|"l-bis"|"L-bis"|
	    "m-bis"|"M-bis"|"n-bis"|"N-bis"|"p-bis"|"P-bis"|"q-bis"|"Q-bis"|"r-bis"|
	    "R-bis"|"s-bis"|"S-bis"|"t-bis"|"T-bis"|"u-bis"|"U-bis"|"v-bis"|"V-bis"|"z-bis"|"Z-bis"

/* lettere ter */
let LETT = "a-ter"|"A-ter"|"b-ter"|"B-ter"|"c-ter"|"C-ter"|"d-ter"|"D-ter"|"f-ter"|
    	   "F-ter"|"g-ter"|"G-ter"|"h-ter"|"H-ter"|"i-ter"|"I-ter"|"l-ter"|"L-ter"|
	   "m-ter"|"M-ter"|"n-ter"|"N-ter"|"p-ter"|"P-ter"|"q-ter"|"Q-ter"|
	   "r-ter"|"R-ter"|"s-ter"|"S-ter"|"t-ter"|"T-ter"|"u-ter"|"U-ter"|"v-ter"|"V-ter"|"z-ter"|"Z-ter"

/* crea una variabile LETTERABIS per il pattern "lettera_bis_Giulia" */

let LETTERABIS = Q_C
		with {
		   Q.potgov = "a-bis"|"A-bis"|"b-bis"|"B-bis"|"c-bis"|"C-bis"|"d-bis"|"D-bis"|"f-bis"|"F-bis"|"g-bis"|"G-bis"|"h-bis"|"H-bis"|"i-bis"|"I-bis"|"l-bis"|"L-bis"|
		   "m-bis"|"M-bis"|"n-bis"|"N-bis"|"p-bis"|"P-bis"|"q-bis"|"Q-bis"|"r-bis"|"R-bis"|"s-bis"|"S-bis"|"t-bis"|"T-bis"|"u-bis"|"U-bis"|"v-bis"|"V-bis"|"z-bis"|"Z-bis"
		   }
		   
/* crea una variabile LETTERATER per il pattern "lettera_ter_Giulia" */

let LETTERATER = Q_C
		with {
		   Q.potgov = "a-ter"|"A-ter"|"b-ter"|"B-ter"|"c-ter"|"C-ter"|"d-ter"|"D-ter"|"f-ter"|"F-ter"|"g-ter"|"G-ter"|"h-ter"|"H-ter"|"i-ter"|"I-ter"|"l-ter"|"L-ter"|
		   "m-ter"|"M-ter"|"n-ter"|"N-ter"|"p-ter"|"P-ter"|"q-ter"|"Q-ter"|"r-ter"|"R-ter"|"s-ter"|"S-ter"|"t-ter"|"T-ter"|"u-ter"|"U-ter"|"v-ter"|"V-ter"|"z-ter"|"Z-ter"
		   }






/*la variabile raccogli alcune congiunzioni subordinanti con valore conclusivo */

let CONCL = "dunque"|"infatti"|"quindi"|"in_realta'"|"pero'"|"ad_esempio"



/*definisce una classe di avverbiali modificatori, che comprende oltre agli ADV_C,
"anche", "piu'" e altre congiunzioni (CONCL)
 COORD.conjtype = "e"|"ed"|"o"|"oppure",*/

let ADVS = X_C;[COORD_C]
	    with {
		X = ADV|SUBORD|NA|ADJ,
	  	IF (X = SUBORD) {
                  X.conjtype = CONCL|"anche"
                  },
	  	 COORD.conjtype = "e"|"ed"|"o"|"oppure",
             IF (X = NA|ADJ) {
	  		X.potgov = "piu'"
	  		}
	  	}

	  	

/* per trattare un problema delle abrogazioni"*/
let TEMPR = X_C
with {
	X = ALL,
        IF (X.prep = "a"|"in") {
           X.potgov != NORMABR
           }   
	}
/* per trattare un problema delle abrogazioni"*/
let NODISP = X_C
with {
	X = ALL,
        X.potgov != "disposizione"
	}







/* la funzione let viene usata per creare delle macro-strutture sintattiche.
In questo caso, RSC_C racchiude la porzione di testo compresa tra un che o 
pronome relativo e il primo verbo (non congiunto) alla sua destra */

let RSC = X_C;Y_C*;Z_C
with {
	X = CHE|N|P|di,
	IF (X = N|P|di) {
		X.potgov = "cui"|"quale"
		},
	Y != FV|BE,
	Z = FV|BE
	}





/* frasi incidentali participiali o aggettivali che iniziano con una
congiunzione subordinante*/


let INCPART = X_C;ADVS*;Y_C
	    with {
               X = ALL,
	    	   X.potgov = "appena"|"anche_se"|"volta"|"sebbene"|"se",
	    	   Y = ADJPART|ADJ
	    	   }




/*per saltare il virgolettato, quando questo è a fine frase*/
   	  
     	         	        

/* let BORDOTIPO = "libro"|"parte"|"titolo"|"capo"|"sezione"|"articolo"|*/
/*    "rubrica"|"comma"|"alinea"|"lettera"|"numero"|"punto"|"periodo"*/

let BORDOTIPO = "capo"|"sezione"|"articolo"|"rubrica"|"comma"|"alinea"|"lettera"|"numero"|"punto"|"periodo"|"capoverso"




/* */
let NOVERB = X_C
    	     with {
	     	  X != FV|BE
		 }

/* */

let ABROGAZIONE = "abrogare" | "sopprimere" | "eliminare"

/* */

let SOSTITUZIONE = "sostituire" | "modificare"

/* */

let INTEGRAZIONE = "aggiungere"|"inserire"
